/*******************************************************************************
 * AbyssalCraft
 * Copyright (c) 2012 - 2025 Shinoow.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the GNU Lesser Public License v3
 * which accompanies this distribution, and is available at
 * http://www.gnu.org/licenses/lgpl-3.0.txt
 *
 * Contributors:
 *     Shinoow -  implementation
 ******************************************************************************/
package com.shinoow.abyssalcraft.client.model.entity;

//import net.minecraft.client.model.ModelBase;
//import net.minecraft.client.model.ModelRenderer;
//import net.minecraft.client.renderer.GlStateManager;
//import net.minecraft.entity.Entity;
//import net.minecraft.util.math.MathHelper;

/**
 * shoggoth - cybercat5555
 * Created using Tabula 5.1.0
 */
/*public class ModelLesserShoggoth extends ModelBase {
	public ModelRenderer bodyBase;
	public ModelRenderer headJoint;
	public ModelRenderer bodyMid;
	public ModelRenderer lHindTentacle01a;
	public ModelRenderer lHindTentacle02a;
	public ModelRenderer lHindTentacle03a;
	public ModelRenderer lBodyTentacle01a;
	public ModelRenderer tail01a;
	public ModelRenderer rHindTentacle01a;
	public ModelRenderer rHindTentacle02a;
	public ModelRenderer rHindTentacle03a;
	public ModelRenderer rBodyTentacle01a;
	public ModelRenderer bodyUpper;
	public ModelRenderer lArm01a;
	public ModelRenderer lBodyTentacle02a;
	public ModelRenderer lBodyTentacle03a;
	public ModelRenderer lBodyTentacle04a;
	public ModelRenderer lBackTentacle01a;
	public ModelRenderer lBackTentacle02a;
	public ModelRenderer lBackTentacle02a_1;
	public ModelRenderer rArm01a;
	public ModelRenderer rBodyTentacle02a;
	public ModelRenderer rBodyTentacle03a;
	public ModelRenderer rBodyTentacle04a;
	public ModelRenderer rBackTentacle01a;
	public ModelRenderer rBackTentacle02a;
	public ModelRenderer rBackTentacle02a_1;
	public ModelRenderer eye19;
	public ModelRenderer eye20;
	public ModelRenderer eye21;
	public ModelRenderer mouth01Upper;
	public ModelRenderer mouth02Upper;
	public ModelRenderer mouth03Upper;
	public ModelRenderer eye01;
	public ModelRenderer eye02;
	public ModelRenderer eye03;
	public ModelRenderer eye04;
	public ModelRenderer eye09;
	public ModelRenderer eye10;
	public ModelRenderer eye11;
	public ModelRenderer eye12;
	public ModelRenderer mouth01Lower;
	public ModelRenderer mouth01Snout;
	public ModelRenderer mouth01Teeth01;
	public ModelRenderer eye04_1;
	public ModelRenderer eye05;
	public ModelRenderer mouth01Tooth01;
	public ModelRenderer mouth01Tooth02;
	public ModelRenderer mouth01Tooth03;
	public ModelRenderer mouth01Tooth04;
	public ModelRenderer mouth01Tooth05;
	public ModelRenderer mouth01Tooth06;
	public ModelRenderer mouth01Teeth02;
	public ModelRenderer mouth01Teeth03;
	public ModelRenderer mouth02Lower;
	public ModelRenderer mouth02Snout;
	public ModelRenderer mouth02Teeth01;
	public ModelRenderer eye06;
	public ModelRenderer mouth02Tooth01;
	public ModelRenderer mouth02Tooth02;
	public ModelRenderer mouth02Tooth03;
	public ModelRenderer mouth02Tooth04;
	public ModelRenderer mouth02Tooth04_1;
	public ModelRenderer mouth02Teeth02;
	public ModelRenderer mouth02Teeth03;
	public ModelRenderer mouth03Lower;
	public ModelRenderer mouth03Snout;
	public ModelRenderer mouth03Teeth01;
	public ModelRenderer eye07;
	public ModelRenderer eye08;
	public ModelRenderer mouth03Tooth01;
	public ModelRenderer mouth03Tooth02;
	public ModelRenderer mouth03Tooth03;
	public ModelRenderer mouth03Tooth04;
	public ModelRenderer mouth03Tooth05;
	public ModelRenderer mouth03Teeth02;
	public ModelRenderer mouth02Teeth03_1;
	public ModelRenderer lArm01b;
	public ModelRenderer eye13;
	public ModelRenderer eye15;
	public ModelRenderer lArm01c;
	public ModelRenderer lArm01d;
	public ModelRenderer eye14;
	public ModelRenderer lBodyTentacle02b;
	public ModelRenderer lBodyTentacle02c;
	public ModelRenderer lBodyTentacle03b;
	public ModelRenderer lBodyTentacle04b;
	public ModelRenderer lBackTentacle01b;
	public ModelRenderer lBackTentacle01c;
	public ModelRenderer lBackTentacle02b;
	public ModelRenderer lBackTentacle02c;
	public ModelRenderer lBackTentacle02b_1;
	public ModelRenderer lBackTentacle02c_1;
	public ModelRenderer rArm01b;
	public ModelRenderer eye18;
	public ModelRenderer rArm01c;
	public ModelRenderer eye16;
	public ModelRenderer eye17;
	public ModelRenderer rArm01d;
	public ModelRenderer rBodyTentacle02b;
	public ModelRenderer rBodyTentacle02c;
	public ModelRenderer rBodyTentacle03b;
	public ModelRenderer rBodyTentacle04b;
	public ModelRenderer rBackTentacle01b;
	public ModelRenderer rBackTentacle01c;
	public ModelRenderer rBackTentacle02b;
	public ModelRenderer rBackTentacle02c;
	public ModelRenderer rBackTentacle02b_1;
	public ModelRenderer rBackTentacle02c_1;
	public ModelRenderer lHindTentacle01b;
	public ModelRenderer lHindTentacle01c;
	public ModelRenderer eye25;
	public ModelRenderer lHindTentacle01d;
	public ModelRenderer lHindTentacle01e;
	public ModelRenderer lHindTentacle02b;
	public ModelRenderer lHindTentacle02c;
	public ModelRenderer eye23;
	public ModelRenderer lHindTentacle02d;
	public ModelRenderer lHindTentacle02e;
	public ModelRenderer eye24;
	public ModelRenderer lHindTentacle03b;
	public ModelRenderer lHindTentacle03;
	public ModelRenderer lHindTentacle03c;
	public ModelRenderer lBodyTentacle01b;
	public ModelRenderer eye22;
	public ModelRenderer lBodyTentacle01c;
	public ModelRenderer tail01b;
	public ModelRenderer eye28;
	public ModelRenderer tail01c;
	public ModelRenderer eye27;
	public ModelRenderer tail01d;
	public ModelRenderer eye26;
	public ModelRenderer tail01e;
	public ModelRenderer rHindTentacle01b;
	public ModelRenderer rHindTentacle01c;
	public ModelRenderer rHindTentacle01d;
	public ModelRenderer eye29;
	public ModelRenderer rHindTentacle01e;
	public ModelRenderer eye30;
	public ModelRenderer rHindTentacle02b;
	public ModelRenderer rHindTentacle02c;
	public ModelRenderer rHindTentacle02d;
	public ModelRenderer eye31;
	public ModelRenderer rHindTentacle02e;
	public ModelRenderer rHindTentacle03b;
	public ModelRenderer rHindTentacle03;
	public ModelRenderer rHindTentacle03c;
	public ModelRenderer eye32;
	public ModelRenderer rBodyTentacle01b;
	public ModelRenderer rBodyTentacle01c;

	private int size;

	public ModelLesserShoggoth(int size) {
		textureWidth = 128;
		textureHeight = 128;
		this.size = size;
		lHindTentacle01a = new ModelRenderer(this, 0, 96);
		lHindTentacle01a.setRotationPoint(4.1F, 6.7F, 4.9F);
		lHindTentacle01a.addBox(-3.0F, -3.0F, 0.0F, 6, 6, 10, 0.0F);
		setRotateAngle(lHindTentacle01a, -0.13962634015954636F, 0.20943951023931953F, 0.0F);
		mouth01Upper = new ModelRenderer(this, 59, 0);
		mouth01Upper.setRotationPoint(0.0F, -15.3F, 0.3F);
		mouth01Upper.addBox(-4.0F, -6.0F, -1.0F, 8, 6, 2, 0.0F);
		rArm01c = new ModelRenderer(this, 93, 97);
		rArm01c.mirror = true;
		rArm01c.setRotationPoint(0.0F, 0.0F, -7.0F);
		rArm01c.addBox(-1.5F, -1.5F, -8.0F, 3, 3, 8, 0.0F);
		setRotateAngle(rArm01c, 0.17453292519943295F, -0.13962634015954636F, 0.0F);
		lHindTentacle03b = new ModelRenderer(this, 92, 96);
		lHindTentacle03b.setRotationPoint(0.0F, 0.4F, 7.2F);
		lHindTentacle03b.addBox(-1.5F, -1.5F, 0.0F, 3, 3, 9, 0.0F);
		setRotateAngle(lHindTentacle03b, 0.0F, -0.5235987755982988F, 0.0F);
		mouth01Lower = new ModelRenderer(this, 59, 11);
		mouth01Lower.setRotationPoint(0.0F, -1.3F, -3.5F);
		mouth01Lower.addBox(-3.5F, -4.0F, -0.5F, 7, 5, 1, 0.0F);
		setRotateAngle(mouth01Lower, 0.2617993877991494F, 0.0F, 0.0F);
		lHindTentacle03 = new ModelRenderer(this, 66, 99);
		lHindTentacle03.setRotationPoint(0.0F, 0.0F, 0.0F);
		lHindTentacle03.addBox(-2.0F, -2.0F, -3.5F, 4, 4, 5, 0.0F);
		setRotateAngle(lHindTentacle03, 0.0F, 0.7853981633974483F, 0.0F);
		lBodyTentacle04a = new ModelRenderer(this, 6, 119);
		lBodyTentacle04a.setRotationPoint(1.5F, -6.0F, -6.7F);
		lBodyTentacle04a.addBox(-1.0F, -1.0F, -4.0F, 2, 2, 4, 0.0F);
		setRotateAngle(lBodyTentacle04a, 0.2792526803190927F, -0.10471975511965977F, 0.0F);
		mouth02Snout = new ModelRenderer(this, 81, 0);
		mouth02Snout.setRotationPoint(0.0F, -1.3F, 2.4F);
		mouth02Snout.addBox(-3.5F, -4.5F, -1.5F, 7, 6, 3, 0.0F);
		setRotateAngle(mouth02Snout, 0.5235987755982988F, 0.0F, 0.0F);
		lBackTentacle01a = new ModelRenderer(this, 94, 98);
		lBackTentacle01a.setRotationPoint(4.7F, -8.9F, 3.4F);
		lBackTentacle01a.addBox(-1.5F, -1.5F, 0.0F, 3, 3, 7, 0.0F);
		setRotateAngle(lBackTentacle01a, -0.5235987755982988F, 0.5235987755982988F, -0.2792526803190927F);
		eye17 = new ModelRenderer(this, 75, 30);
		eye17.setRotationPoint(2.0F, 1.1F, -8.2F);
		eye17.addBox(-1.0F, -1.0F, -1.0F, 2, 2, 2, 0.0F);
		lHindTentacle02b = new ModelRenderer(this, 34, 96);
		lHindTentacle02b.setRotationPoint(0.0F, 0.4F, 9.5F);
		lHindTentacle02b.addBox(-2.5F, -2.5F, 0.0F, 5, 5, 8, 0.0F);
		setRotateAngle(lHindTentacle02b, 0.0F, -0.10471975511965977F, 0.0F);
		mouth03Snout = new ModelRenderer(this, 81, 0);
		mouth03Snout.mirror = true;
		mouth03Snout.setRotationPoint(0.0F, -1.3F, 2.4F);
		mouth03Snout.addBox(-3.5F, -4.5F, -1.5F, 7, 6, 3, 0.0F);
		setRotateAngle(mouth03Snout, 0.5235987755982988F, 0.0F, 0.0F);
		mouth03Teeth01 = new ModelRenderer(this, 79, 10);
		mouth03Teeth01.mirror = true;
		mouth03Teeth01.setRotationPoint(0.0F, -5.0F, 0.0F);
		mouth03Teeth01.addBox(-3.5F, -0.7F, -2.9F, 7, 5, 2, 0.0F);
		rBackTentacle02b_1 = new ModelRenderer(this, 5, 118);
		rBackTentacle02b_1.mirror = true;
		rBackTentacle02b_1.setRotationPoint(0.0F, 0.0F, 5.2F);
		rBackTentacle02b_1.addBox(-1.0F, -1.0F, 0.0F, 2, 2, 5, 0.0F);
		setRotateAngle(rBackTentacle02b_1, -0.24434609527920614F, 0.08726646259971647F, 0.0F);
		eye21 = new ModelRenderer(this, 61, 30);
		eye21.setRotationPoint(6.7F, -10.7F, 1.7F);
		eye21.addBox(-1.5F, -1.5F, -1.5F, 3, 3, 3, 0.0F);
		mouth03Tooth05 = new ModelRenderer(this, 105, 17);
		mouth03Tooth05.mirror = true;
		mouth03Tooth05.setRotationPoint(3.4F, -5.1F, -0.4F);
		mouth03Tooth05.addBox(-0.5F, -0.5F, -3.8F, 1, 1, 5, 0.0F);
		setRotateAngle(mouth03Tooth05, 0.08726646259971647F, -0.3141592653589793F, 0.5235987755982988F);
		mouth02Lower = new ModelRenderer(this, 59, 11);
		mouth02Lower.setRotationPoint(0.0F, -1.3F, -3.5F);
		mouth02Lower.addBox(-3.5F, -4.0F, -0.5F, 7, 5, 1, 0.0F);
		setRotateAngle(mouth02Lower, 0.2617993877991494F, 0.0F, 0.0F);
		lBackTentacle02c = new ModelRenderer(this, 17, 115);
		lBackTentacle02c.setRotationPoint(0.0F, 0.0F, 4.7F);
		lBackTentacle02c.addBox(-0.5F, -0.5F, 0.0F, 1, 1, 4, 0.0F);
		setRotateAngle(lBackTentacle02c, 0.15707963267948966F, 0.13962634015954636F, 0.0F);
		rBodyTentacle04b = new ModelRenderer(this, 17, 115);
		rBodyTentacle04b.mirror = true;
		rBodyTentacle04b.setRotationPoint(0.0F, 0.0F, -3.8F);
		rBodyTentacle04b.addBox(-0.5F, -0.5F, -4.0F, 1, 1, 4, 0.0F);
		setRotateAngle(rBodyTentacle04b, 0.3141592653589793F, 0.0F, 0.0F);
		eye09 = new ModelRenderer(this, 61, 30);
		eye09.setRotationPoint(-1.2F, -11.9F, 6.1F);
		eye09.addBox(-1.5F, -1.5F, -1.5F, 3, 3, 3, 0.0F);
		eye01 = new ModelRenderer(this, 61, 30);
		eye01.setRotationPoint(5.5F, -14.0F, 5.0F);
		eye01.addBox(-1.5F, -1.5F, -1.5F, 3, 3, 3, 0.0F);
		rBodyTentacle03a = new ModelRenderer(this, 6, 119);
		rBodyTentacle03a.mirror = true;
		rBodyTentacle03a.setRotationPoint(-4.8F, -7.8F, -6.6F);
		rBodyTentacle03a.addBox(-1.0F, -1.0F, -4.0F, 2, 2, 4, 0.0F);
		setRotateAngle(rBodyTentacle03a, 0.13962634015954636F, 0.4363323129985824F, 0.0F);
		mouth03Tooth02 = new ModelRenderer(this, 105, 10);
		mouth03Tooth02.setRotationPoint(0.2F, -5.5F, -0.4F);
		mouth03Tooth02.addBox(-0.5F, -0.5F, -3.0F, 1, 1, 3, 0.0F);
		setRotateAngle(mouth03Tooth02, -0.3141592653589793F, 0.2792526803190927F, 0.7853981633974483F);
		lArm01a = new ModelRenderer(this, 34, 96);
		lArm01a.setRotationPoint(4.0F, -11.9F, -2.7F);
		lArm01a.addBox(-2.5F, -2.5F, -8.1F, 5, 5, 8, 0.0F);
		setRotateAngle(lArm01a, -0.24434609527920614F, -0.3665191429188092F, 0.0F);
		rBackTentacle01a = new ModelRenderer(this, 94, 98);
		rBackTentacle01a.mirror = true;
		rBackTentacle01a.setRotationPoint(-4.7F, -8.9F, 3.4F);
		rBackTentacle01a.addBox(-1.5F, -1.5F, 0.0F, 3, 3, 7, 0.0F);
		setRotateAngle(rBackTentacle01a, -0.5235987755982988F, -0.5235987755982988F, 0.2792526803190927F);
		lBackTentacle01c = new ModelRenderer(this, 16, 114);
		lBackTentacle01c.setRotationPoint(0.0F, 0.0F, 6.6F);
		lBackTentacle01c.addBox(-0.5F, -0.5F, 0.0F, 1, 1, 5, 0.0F);
		setRotateAngle(lBackTentacle01c, -0.13962634015954636F, -0.22689280275926282F, 0.0F);
		rArm01a = new ModelRenderer(this, 34, 96);
		rArm01a.mirror = true;
		rArm01a.setRotationPoint(-4.0F, -11.9F, -2.7F);
		rArm01a.addBox(-2.5F, -2.5F, -8.1F, 5, 5, 8, 0.0F);
		setRotateAngle(rArm01a, -0.24434609527920614F, 0.3665191429188092F, 0.0F);
		lArm01b = new ModelRenderer(this, 63, 96);
		lArm01b.setRotationPoint(0.0F, 0.0F, -7.8F);
		lArm01b.addBox(-2.0F, -2.0F, -8.0F, 4, 4, 8, 0.0F);
		setRotateAngle(lArm01b, 0.06981317007977318F, 0.06981317007977318F, 0.0F);
		mouth03Lower = new ModelRenderer(this, 59, 11);
		mouth03Lower.mirror = true;
		mouth03Lower.setRotationPoint(0.0F, -1.3F, -3.5F);
		mouth03Lower.addBox(-3.5F, -4.0F, -0.5F, 7, 5, 1, 0.0F);
		setRotateAngle(mouth03Lower, 0.2617993877991494F, 0.0F, 0.0F);
		eye05 = new ModelRenderer(this, 75, 30);
		eye05.setRotationPoint(-2.3F, -3.2F, 2.9F);
		eye05.addBox(-1.0F, -1.0F, -1.0F, 2, 2, 2, 0.0F);
		lArm01d = new ModelRenderer(this, 1, 114);
		lArm01d.setRotationPoint(0.0F, 0.0F, -7.2F);
		lArm01d.addBox(-1.0F, -1.0F, -9.0F, 2, 2, 9, 0.0F);
		setRotateAngle(lArm01d, 0.13962634015954636F, 0.13962634015954636F, 0.0F);
		headJoint = new ModelRenderer(this, 0, 0);
		headJoint.setRotationPoint(0.0F, 1.6F, -4.0F);
		headJoint.addBox(-0.5F, -0.5F, -0.5F, 1, 1, 1, 0.0F);
		lBodyTentacle01b = new ModelRenderer(this, 93, 97);
		lBodyTentacle01b.setRotationPoint(0.0F, 0.0F, -7.0F);
		lBodyTentacle01b.addBox(-1.5F, -1.5F, -8.0F, 3, 3, 8, 0.0F);
		setRotateAngle(lBodyTentacle01b, 0.05235987755982988F, 0.3665191429188092F, 0.0F);
		rArm01b = new ModelRenderer(this, 63, 96);
		rArm01b.mirror = true;
		rArm01b.setRotationPoint(0.0F, 0.0F, -7.8F);
		rArm01b.addBox(-2.0F, -2.0F, -8.0F, 4, 4, 8, 0.0F);
		setRotateAngle(rArm01b, 0.06981317007977318F, -0.06981317007977318F, 0.0F);
		rBodyTentacle02b = new ModelRenderer(this, 5, 118);
		rBodyTentacle02b.mirror = true;
		rBodyTentacle02b.setRotationPoint(0.0F, 0.3F, -4.7F);
		rBodyTentacle02b.addBox(-1.0F, -1.0F, -5.0F, 2, 2, 5, 0.0F);
		setRotateAngle(rBodyTentacle02b, 0.19198621771937624F, -0.08726646259971647F, 0.0F);
		eye20 = new ModelRenderer(this, 61, 30);
		eye20.setRotationPoint(-6.7F, -6.6F, 0.7F);
		eye20.addBox(-1.5F, -1.5F, -1.5F, 3, 3, 3, 0.0F);
		rBackTentacle02a = new ModelRenderer(this, 94, 98);
		rBackTentacle02a.mirror = true;
		rBackTentacle02a.setRotationPoint(-5.4F, -0.7F, 5.8F);
		rBackTentacle02a.addBox(-1.5F, -1.5F, 0.0F, 3, 3, 7, 0.0F);
		setRotateAngle(rBackTentacle02a, -0.7330382858376184F, -0.3665191429188092F, 0.0F);
		lBackTentacle02c_1 = new ModelRenderer(this, 16, 114);
		lBackTentacle02c_1.setRotationPoint(0.0F, 0.0F, 5.8F);
		lBackTentacle02c_1.addBox(-0.5F, -0.5F, 0.0F, 1, 1, 5, 0.0F);
		setRotateAngle(lBackTentacle02c_1, -0.13962634015954636F, 0.13962634015954636F, 0.0F);
		eye19 = new ModelRenderer(this, 61, 30);
		eye19.setRotationPoint(-6.7F, -13.3F, 3.9F);
		eye19.addBox(-1.5F, -1.5F, -1.5F, 3, 3, 3, 0.0F);
		eye28 = new ModelRenderer(this, 75, 30);
		eye28.setRotationPoint(-0.9F, -3.3F, 3.8F);
		eye28.addBox(-1.0F, -1.0F, -1.0F, 2, 2, 2, 0.0F);
		eye23 = new ModelRenderer(this, 75, 30);
		eye23.setRotationPoint(2.1F, -2.5F, 3.5F);
		eye23.addBox(-1.0F, -1.0F, -1.0F, 2, 2, 2, 0.0F);
		tail01c = new ModelRenderer(this, 63, 96);
		tail01c.setRotationPoint(0.0F, 0.4F, 7.5F);
		tail01c.addBox(-2.0F, -2.0F, 0.0F, 4, 4, 8, 0.0F);
		setRotateAngle(tail01c, 0.2792526803190927F, 0.0F, 0.0F);
		rHindTentacle02b = new ModelRenderer(this, 34, 96);
		rHindTentacle02b.mirror = true;
		rHindTentacle02b.setRotationPoint(0.0F, 0.4F, 9.5F);
		rHindTentacle02b.addBox(-2.5F, -2.5F, 0.0F, 5, 5, 8, 0.0F);
		setRotateAngle(rHindTentacle02b, 0.0F, 0.10471975511965977F, 0.0F);
		bodyBase = new ModelRenderer(this, 0, 64);
		bodyBase.setRotationPoint(0.0F, 12.0F, 0.0F);
		bodyBase.addBox(-7.0F, 0.0F, -4.0F, 14, 12, 16, 0.0F);
		rHindTentacle01e = new ModelRenderer(this, 0, 113);
		rHindTentacle01e.mirror = true;
		rHindTentacle01e.setRotationPoint(0.0F, 0.4F, 8.9F);
		rHindTentacle01e.addBox(-1.0F, -1.0F, 0.0F, 2, 2, 10, 0.0F);
		setRotateAngle(rHindTentacle01e, 0.0F, -0.06981317007977318F, 0.0F);
		tail01d = new ModelRenderer(this, 92, 96);
		tail01d.setRotationPoint(0.0F, 0.4F, 7.6F);
		tail01d.addBox(-1.5F, -1.5F, 0.0F, 3, 3, 9, 0.0F);
		setRotateAngle(tail01d, 0.08726646259971647F, 0.0F, 0.0F);
		lHindTentacle03c = new ModelRenderer(this, 0, 113);
		lHindTentacle03c.setRotationPoint(0.0F, 0.4F, 8.6F);
		lHindTentacle03c.addBox(-1.0F, -1.0F, 0.0F, 2, 2, 10, 0.0F);
		setRotateAngle(lHindTentacle03c, 0.0F, -0.2617993877991494F, 0.0F);
		mouth01Teeth03 = new ModelRenderer(this, 96, 19);
		mouth01Teeth03.setRotationPoint(0.0F, 0.0F, 0.0F);
		mouth01Teeth03.addBox(2.4F, -3.9F, 0.3F, 1, 4, 1, 0.0F);
		mouth02Tooth02 = new ModelRenderer(this, 105, 17);
		mouth02Tooth02.setRotationPoint(2.7F, -5.5F, -0.5F);
		mouth02Tooth02.addBox(-0.5F, -0.5F, -4.4F, 1, 1, 5, 0.0F);
		setRotateAngle(mouth02Tooth02, -0.3141592653589793F, 0.2792526803190927F, 0.7853981633974483F);
		rBackTentacle01b = new ModelRenderer(this, 3, 116);
		rBackTentacle01b.mirror = true;
		rBackTentacle01b.setRotationPoint(0.0F, 0.0F, 6.3F);
		rBackTentacle01b.addBox(-1.0F, -1.0F, 0.0F, 2, 2, 7, 0.0F);
		setRotateAngle(rBackTentacle01b, -0.41887902047863906F, 0.22689280275926282F, 0.0F);
		lBodyTentacle01a = new ModelRenderer(this, 63, 96);
		lBodyTentacle01a.setRotationPoint(4.8F, 4.1F, 0.7F);
		lBodyTentacle01a.addBox(-2.0F, -2.0F, -8.0F, 4, 4, 8, 0.0F);
		setRotateAngle(lBodyTentacle01a, 0.3665191429188092F, -0.7853981633974483F, 0.0F);
		mouth02Teeth02 = new ModelRenderer(this, 80, 19);
		mouth02Teeth02.setRotationPoint(0.0F, 0.0F, 0.0F);
		mouth02Teeth02.addBox(-3.4F, -3.9F, 0.3F, 6, 4, 1, 0.0F);
		lBackTentacle02b = new ModelRenderer(this, 5, 118);
		lBackTentacle02b.setRotationPoint(0.0F, 0.0F, 5.2F);
		lBackTentacle02b.addBox(-1.0F, -1.0F, 0.0F, 2, 2, 5, 0.0F);
		setRotateAngle(lBackTentacle02b, -0.24434609527920614F, -0.08726646259971647F, 0.0F);
		eye11 = new ModelRenderer(this, 75, 30);
		eye11.setRotationPoint(-2.1F, -3.9F, 6.3F);
		eye11.addBox(-1.0F, -1.0F, -1.0F, 2, 2, 2, 0.0F);
		lHindTentacle01b = new ModelRenderer(this, 34, 96);
		lHindTentacle01b.setRotationPoint(0.0F, 0.4F, 9.5F);
		lHindTentacle01b.addBox(-2.5F, -2.5F, 0.0F, 5, 5, 8, 0.0F);
		setRotateAngle(lHindTentacle01b, 0.0F, -0.13962634015954636F, 0.0F);
		eye15 = new ModelRenderer(this, 75, 30);
		eye15.setRotationPoint(2.6F, 1.1F, -7.6F);
		eye15.addBox(-1.0F, -1.0F, -1.0F, 2, 2, 2, 0.0F);
		bodyUpper = new ModelRenderer(this, 0, 1);
		bodyUpper.setRotationPoint(0.0F, 3.1F, 2.0F);
		bodyUpper.addBox(-5.5F, -17.0F, -5.5F, 11, 17, 11, 0.0F);
		setRotateAngle(bodyUpper, 1.5707963267948966F, 0.0F, 0.0F);
		eye08 = new ModelRenderer(this, 75, 30);
		eye08.setRotationPoint(3.3F, -4.8F, 1.4F);
		eye08.addBox(-1.0F, -1.0F, -1.0F, 2, 2, 2, 0.0F);
		lHindTentacle02c = new ModelRenderer(this, 63, 96);
		lHindTentacle02c.setRotationPoint(0.0F, 0.4F, 7.5F);
		lHindTentacle02c.addBox(-2.0F, -2.0F, 0.0F, 4, 4, 8, 0.0F);
		setRotateAngle(lHindTentacle02c, 0.0F, -0.3490658503988659F, 0.0F);
		eye31 = new ModelRenderer(this, 75, 30);
		eye31.setRotationPoint(-1.5F, -1.8F, 3.8F);
		eye31.addBox(-1.0F, -1.0F, -1.0F, 2, 2, 2, 0.0F);
		lArm01c = new ModelRenderer(this, 93, 97);
		lArm01c.setRotationPoint(0.0F, 0.0F, -7.0F);
		lArm01c.addBox(-1.5F, -1.5F, -8.0F, 3, 3, 8, 0.0F);
		setRotateAngle(lArm01c, 0.17453292519943295F, 0.13962634015954636F, 0.0F);
		rBodyTentacle04a = new ModelRenderer(this, 6, 119);
		rBodyTentacle04a.mirror = true;
		rBodyTentacle04a.setRotationPoint(-1.5F, -6.0F, -6.7F);
		rBodyTentacle04a.addBox(-1.0F, -1.0F, -4.0F, 2, 2, 4, 0.0F);
		setRotateAngle(rBodyTentacle04a, 0.2792526803190927F, 0.10471975511965977F, 0.0F);
		rBodyTentacle02c = new ModelRenderer(this, 17, 115);
		rBodyTentacle02c.mirror = true;
		rBodyTentacle02c.setRotationPoint(0.0F, 0.0F, -4.8F);
		rBodyTentacle02c.addBox(-0.5F, -0.5F, -4.0F, 1, 1, 4, 0.0F);
		setRotateAngle(rBodyTentacle02c, 0.10471975511965977F, 0.0F, 0.0F);
		rHindTentacle03b = new ModelRenderer(this, 92, 96);
		rHindTentacle03b.mirror = true;
		rHindTentacle03b.setRotationPoint(0.0F, 0.4F, 7.2F);
		rHindTentacle03b.addBox(-1.5F, -1.5F, 0.0F, 3, 3, 9, 0.0F);
		setRotateAngle(rHindTentacle03b, 0.0F, 0.5235987755982988F, 0.0F);
		lHindTentacle02e = new ModelRenderer(this, 0, 113);
		lHindTentacle02e.setRotationPoint(0.0F, 0.4F, 8.9F);
		lHindTentacle02e.addBox(-1.0F, -1.0F, 0.0F, 2, 2, 10, 0.0F);
		setRotateAngle(lHindTentacle02e, 0.0F, 0.06981317007977318F, 0.0F);
		mouth02Teeth03_1 = new ModelRenderer(this, 96, 19);
		mouth02Teeth03_1.mirror = true;
		mouth02Teeth03_1.setRotationPoint(0.0F, 0.0F, 0.0F);
		mouth02Teeth03_1.addBox(-3.3F, -3.9F, 0.3F, 1, 4, 1, 0.0F);
		rHindTentacle01b = new ModelRenderer(this, 34, 96);
		rHindTentacle01b.mirror = true;
		rHindTentacle01b.setRotationPoint(0.0F, 0.4F, 9.5F);
		rHindTentacle01b.addBox(-2.5F, -2.5F, 0.0F, 5, 5, 8, 0.0F);
		setRotateAngle(rHindTentacle01b, 0.0F, 0.13962634015954636F, 0.0F);
		rBodyTentacle03b = new ModelRenderer(this, 17, 114);
		rBodyTentacle03b.mirror = true;
		rBodyTentacle03b.setRotationPoint(0.0F, 0.0F, -3.8F);
		rBodyTentacle03b.addBox(-0.5F, -0.5F, -5.0F, 1, 1, 5, 0.0F);
		setRotateAngle(rBodyTentacle03b, 0.19198621771937624F, -0.2617993877991494F, 0.0F);
		mouth03Tooth01 = new ModelRenderer(this, 105, 17);
		mouth03Tooth01.mirror = true;
		mouth03Tooth01.setRotationPoint(-1.7F, -5.5F, -0.7F);
		mouth03Tooth01.addBox(-0.5F, -0.5F, -4.8F, 1, 1, 5, 0.0F);
		setRotateAngle(mouth03Tooth01, -0.3141592653589793F, -0.2792526803190927F, -0.7853981633974483F);
		bodyMid = new ModelRenderer(this, 0, 31);
		bodyMid.setRotationPoint(0.0F, 3.6F, 4.4F);
		bodyMid.addBox(-6.5F, -16.0F, -7.0F, 13, 18, 14, 0.0F);
		setRotateAngle(bodyMid, 0.7853981633974483F, 0.0F, 0.0F);
		rBodyTentacle01a = new ModelRenderer(this, 63, 96);
		rBodyTentacle01a.mirror = true;
		rBodyTentacle01a.setRotationPoint(-4.8F, 4.1F, 0.7F);
		rBodyTentacle01a.addBox(-2.0F, -2.0F, -8.0F, 4, 4, 8, 0.0F);
		setRotateAngle(rBodyTentacle01a, 0.3665191429188092F, 0.7853981633974483F, 0.0F);
		mouth02Tooth01 = new ModelRenderer(this, 105, 10);
		mouth02Tooth01.setRotationPoint(0.3F, -5.5F, -0.5F);
		mouth02Tooth01.addBox(-0.5F, -0.5F, -3.0F, 1, 1, 3, 0.0F);
		setRotateAngle(mouth02Tooth01, -0.3141592653589793F, 0.2792526803190927F, 0.7853981633974483F);
		lHindTentacle01d = new ModelRenderer(this, 92, 96);
		lHindTentacle01d.setRotationPoint(0.0F, 0.4F, 7.6F);
		lHindTentacle01d.addBox(-1.5F, -1.5F, 0.0F, 3, 3, 9, 0.0F);
		setRotateAngle(lHindTentacle01d, 0.0F, -0.05235987755982988F, 0.0F);
		eye29 = new ModelRenderer(this, 61, 30);
		eye29.setRotationPoint(-1.0F, -2.0F, 0.7F);
		eye29.addBox(-1.5F, -1.5F, -1.5F, 3, 3, 3, 0.0F);
		mouth03Tooth04 = new ModelRenderer(this, 105, 10);
		mouth03Tooth04.setRotationPoint(2.2F, -5.5F, -0.4F);
		mouth03Tooth04.addBox(-0.5F, -0.5F, -3.0F, 1, 1, 3, 0.0F);
		setRotateAngle(mouth03Tooth04, -0.41887902047863906F, 0.08726646259971647F, 0.7853981633974483F);
		mouth01Tooth05 = new ModelRenderer(this, 105, 10);
		mouth01Tooth05.mirror = true;
		mouth01Tooth05.setRotationPoint(3.4F, -3.4F, -0.4F);
		mouth01Tooth05.addBox(-0.5F, -0.5F, -2.9F, 1, 1, 3, 0.0F);
		setRotateAngle(mouth01Tooth05, 0.0F, -0.19198621771937624F, 0.5235987755982988F);
		mouth01Teeth02 = new ModelRenderer(this, 80, 19);
		mouth01Teeth02.setRotationPoint(0.0F, 0.0F, 0.0F);
		mouth01Teeth02.addBox(-3.4F, -3.9F, 0.3F, 6, 4, 1, 0.0F);
		lBodyTentacle02a = new ModelRenderer(this, 96, 100);
		lBodyTentacle02a.setRotationPoint(3.5F, -10.4F, -6.8F);
		lBodyTentacle02a.addBox(-1.5F, -1.5F, -5.0F, 3, 3, 5, 0.0F);
		setRotateAngle(lBodyTentacle02a, 0.05235987755982988F, -0.10471975511965977F, 0.0F);
		eye27 = new ModelRenderer(this, 75, 30);
		eye27.setRotationPoint(-2.0F, -2.5F, 3.8F);
		eye27.addBox(-1.0F, -1.0F, -1.0F, 2, 2, 2, 0.0F);
		mouth01Tooth03 = new ModelRenderer(this, 105, 10);
		mouth01Tooth03.setRotationPoint(-3.1F, -3.4F, -0.4F);
		mouth01Tooth03.addBox(-0.5F, -0.5F, -2.9F, 1, 1, 3, 0.0F);
		setRotateAngle(mouth01Tooth03, 0.0F, 0.19198621771937624F, 0.0F);
		rHindTentacle01c = new ModelRenderer(this, 63, 96);
		rHindTentacle01c.mirror = true;
		rHindTentacle01c.setRotationPoint(0.0F, 0.4F, 7.5F);
		rHindTentacle01c.addBox(-2.0F, -2.0F, 0.0F, 4, 4, 8, 0.0F);
		setRotateAngle(rHindTentacle01c, 0.13962634015954636F, 0.06981317007977318F, 0.0F);
		rHindTentacle02e = new ModelRenderer(this, 0, 113);
		rHindTentacle02e.mirror = true;
		rHindTentacle02e.setRotationPoint(0.0F, 0.4F, 8.9F);
		rHindTentacle02e.addBox(-1.0F, -1.0F, 0.0F, 2, 2, 10, 0.0F);
		setRotateAngle(rHindTentacle02e, 0.0F, -0.06981317007977318F, 0.0F);
		rHindTentacle03c = new ModelRenderer(this, 0, 113);
		rHindTentacle03c.mirror = true;
		rHindTentacle03c.setRotationPoint(0.0F, 0.4F, 8.6F);
		rHindTentacle03c.addBox(-1.0F, -1.0F, 0.0F, 2, 2, 10, 0.0F);
		setRotateAngle(rHindTentacle03c, 0.0F, 0.2617993877991494F, 0.0F);
		eye30 = new ModelRenderer(this, 75, 30);
		eye30.setRotationPoint(-0.1F, -1.8F, 3.8F);
		eye30.addBox(-1.0F, -1.0F, -1.0F, 2, 2, 2, 0.0F);
		eye03 = new ModelRenderer(this, 61, 30);
		eye03.setRotationPoint(5.6F, -5.4F, 2.6F);
		eye03.addBox(-1.5F, -1.5F, -1.5F, 3, 3, 3, 0.0F);
		rBackTentacle01c = new ModelRenderer(this, 16, 114);
		rBackTentacle01c.mirror = true;
		rBackTentacle01c.setRotationPoint(0.0F, 0.0F, 6.6F);
		rBackTentacle01c.addBox(-0.5F, -0.5F, 0.0F, 1, 1, 5, 0.0F);
		setRotateAngle(rBackTentacle01c, -0.13962634015954636F, 0.22689280275926282F, 0.0F);
		rHindTentacle03a = new ModelRenderer(this, 63, 96);
		rHindTentacle03a.mirror = true;
		rHindTentacle03a.setRotationPoint(-4.2F, 10.0F, -3.5F);
		rHindTentacle03a.addBox(-2.0F, -2.0F, 0.0F, 4, 4, 8, 0.0F);
		setRotateAngle(rHindTentacle03a, 0.0F, -1.0471975511965976F, 0.0F);
		rHindTentacle01a = new ModelRenderer(this, 0, 96);
		rHindTentacle01a.mirror = true;
		rHindTentacle01a.setRotationPoint(-4.1F, 6.7F, 4.9F);
		rHindTentacle01a.addBox(-3.0F, -3.0F, 0.0F, 6, 6, 10, 0.0F);
		setRotateAngle(rHindTentacle01a, -0.13962634015954636F, -0.20943951023931953F, 0.0F);
		lBodyTentacle04b = new ModelRenderer(this, 17, 115);
		lBodyTentacle04b.setRotationPoint(0.0F, 0.0F, -3.8F);
		lBodyTentacle04b.addBox(-0.5F, -0.5F, -4.0F, 1, 1, 4, 0.0F);
		setRotateAngle(lBodyTentacle04b, 0.3141592653589793F, 0.0F, 0.0F);
		rHindTentacle01d = new ModelRenderer(this, 92, 96);
		rHindTentacle01d.mirror = true;
		rHindTentacle01d.setRotationPoint(0.0F, 0.4F, 7.6F);
		rHindTentacle01d.addBox(-1.5F, -1.5F, 0.0F, 3, 3, 9, 0.0F);
		setRotateAngle(rHindTentacle01d, 0.0F, 0.05235987755982988F, 0.0F);
		mouth01Snout = new ModelRenderer(this, 81, 0);
		mouth01Snout.setRotationPoint(0.0F, -1.3F, 2.4F);
		mouth01Snout.addBox(-3.5F, -4.5F, -1.5F, 7, 6, 3, 0.0F);
		setRotateAngle(mouth01Snout, 0.5235987755982988F, 0.0F, 0.0F);
		lBodyTentacle01c = new ModelRenderer(this, 1, 114);
		lBodyTentacle01c.setRotationPoint(0.0F, 0.0F, -7.2F);
		lBodyTentacle01c.addBox(-1.0F, -1.0F, -9.0F, 2, 2, 9, 0.0F);
		setRotateAngle(lBodyTentacle01c, 0.45378560551852565F, -0.08726646259971647F, 0.0F);
		rHindTentacle02d = new ModelRenderer(this, 92, 96);
		rHindTentacle02d.mirror = true;
		rHindTentacle02d.setRotationPoint(0.0F, 0.4F, 7.6F);
		rHindTentacle02d.addBox(-1.5F, -1.5F, 0.0F, 3, 3, 9, 0.0F);
		setRotateAngle(rHindTentacle02d, 0.0F, 0.06981317007977318F, 0.0F);
		lBackTentacle02a = new ModelRenderer(this, 95, 99);
		lBackTentacle02a.setRotationPoint(3.5F, -14.5F, 5.9F);
		lBackTentacle02a.addBox(-1.5F, -1.5F, 0.0F, 3, 3, 6, 0.0F);
		setRotateAngle(lBackTentacle02a, -0.5235987755982988F, 0.10471975511965977F, 0.0F);
		eye02 = new ModelRenderer(this, 61, 30);
		eye02.setRotationPoint(-5.5F, -14.0F, 5.0F);
		eye02.addBox(-1.5F, -1.5F, -1.5F, 3, 3, 3, 0.0F);
		tail01b = new ModelRenderer(this, 34, 96);
		tail01b.setRotationPoint(0.0F, 0.4F, 9.5F);
		tail01b.addBox(-2.5F, -2.5F, 0.0F, 5, 5, 8, 0.0F);
		setRotateAngle(tail01b, -0.06981317007977318F, 0.0F, 0.0F);
		mouth02Upper = new ModelRenderer(this, 59, 0);
		mouth02Upper.setRotationPoint(3.8F, -12.2F, -1.8F);
		mouth02Upper.addBox(-4.0F, -6.0F, -1.0F, 8, 6, 2, 0.0F);
		setRotateAngle(mouth02Upper, 0.0F, 0.0F, 0.9599310885968813F);
		eye32 = new ModelRenderer(this, 75, 30);
		eye32.setRotationPoint(-1.1F, -1.2F, 3.4F);
		eye32.addBox(-1.0F, -1.0F, -1.0F, 2, 2, 2, 0.0F);
		lBodyTentacle03a = new ModelRenderer(this, 6, 119);
		lBodyTentacle03a.setRotationPoint(4.8F, -7.8F, -6.6F);
		lBodyTentacle03a.addBox(-1.0F, -1.0F, -4.0F, 2, 2, 4, 0.0F);
		setRotateAngle(lBodyTentacle03a, 0.13962634015954636F, -0.4363323129985824F, 0.0F);
		mouth01Tooth02 = new ModelRenderer(this, 105, 10);
		mouth01Tooth02.setRotationPoint(0.4F, -5.5F, -0.5F);
		mouth01Tooth02.addBox(-0.5F, -0.5F, -3.0F, 1, 1, 3, 0.0F);
		setRotateAngle(mouth01Tooth02, -0.3141592653589793F, 0.2792526803190927F, 0.7853981633974483F);
		mouth01Tooth04 = new ModelRenderer(this, 105, 10);
		mouth01Tooth04.setRotationPoint(-3.1F, -5.3F, -0.5F);
		mouth01Tooth04.addBox(-0.5F, -0.5F, -2.2F, 1, 1, 3, 0.0F);
		setRotateAngle(mouth01Tooth04, 0.0F, 0.0F, 0.2617993877991494F);
		lHindTentacle01e = new ModelRenderer(this, 0, 113);
		lHindTentacle01e.setRotationPoint(0.0F, 0.4F, 8.9F);
		lHindTentacle01e.addBox(-1.0F, -1.0F, 0.0F, 2, 2, 10, 0.0F);
		setRotateAngle(lHindTentacle01e, 0.0F, 0.06981317007977318F, 0.0F);
		eye06 = new ModelRenderer(this, 61, 30);
		eye06.setRotationPoint(0.4F, -3.0F, 3.5F);
		eye06.addBox(-1.5F, -1.5F, -1.5F, 3, 3, 3, 0.0F);
		mouth02Tooth03 = new ModelRenderer(this, 105, 17);
		mouth02Tooth03.mirror = true;
		mouth02Tooth03.setRotationPoint(-3.4F, -5.5F, -0.7F);
		mouth02Tooth03.addBox(-0.5F, -0.5F, -3.7F, 1, 1, 5, 0.0F);
		setRotateAngle(mouth02Tooth03, -0.3141592653589793F, -0.2792526803190927F, -0.7853981633974483F);
		rBodyTentacle01c = new ModelRenderer(this, 1, 114);
		rBodyTentacle01c.mirror = true;
		rBodyTentacle01c.setRotationPoint(0.0F, 0.0F, -7.2F);
		rBodyTentacle01c.addBox(-1.0F, -1.0F, -9.0F, 2, 2, 9, 0.0F);
		setRotateAngle(rBodyTentacle01c, 0.45378560551852565F, 0.08726646259971647F, 0.0F);
		mouth01Tooth01 = new ModelRenderer(this, 105, 17);
		mouth01Tooth01.mirror = true;
		mouth01Tooth01.setRotationPoint(-2.0F, -5.5F, -0.7F);
		mouth01Tooth01.addBox(-0.5F, -0.5F, -3.7F, 1, 1, 5, 0.0F);
		setRotateAngle(mouth01Tooth01, -0.3141592653589793F, -0.2792526803190927F, -0.7853981633974483F);
		lHindTentacle01c = new ModelRenderer(this, 63, 96);
		lHindTentacle01c.setRotationPoint(0.0F, 0.4F, 7.5F);
		lHindTentacle01c.addBox(-2.0F, -2.0F, 0.0F, 4, 4, 8, 0.0F);
		setRotateAngle(lHindTentacle01c, 0.13962634015954636F, -0.06981317007977318F, 0.0F);
		eye04_1 = new ModelRenderer(this, 75, 30);
		eye04_1.setRotationPoint(2.3F, -3.2F, 2.9F);
		eye04_1.addBox(-1.0F, -1.0F, -1.0F, 2, 2, 2, 0.0F);
		mouth01Tooth06 = new ModelRenderer(this, 105, 17);
		mouth01Tooth06.setRotationPoint(2.7F, -5.5F, -0.5F);
		mouth01Tooth06.addBox(-0.5F, -0.5F, -4.4F, 1, 1, 5, 0.0F);
		setRotateAngle(mouth01Tooth06, -0.3141592653589793F, 0.2792526803190927F, 0.7853981633974483F);
		lBackTentacle01b = new ModelRenderer(this, 3, 116);
		lBackTentacle01b.setRotationPoint(0.0F, 0.0F, 6.3F);
		lBackTentacle01b.addBox(-1.0F, -1.0F, 0.0F, 2, 2, 7, 0.0F);
		setRotateAngle(lBackTentacle01b, -0.41887902047863906F, -0.22689280275926282F, 0.0F);
		mouth02Teeth03 = new ModelRenderer(this, 96, 19);
		mouth02Teeth03.setRotationPoint(0.0F, 0.0F, 0.0F);
		mouth02Teeth03.addBox(2.4F, -3.9F, 0.3F, 1, 4, 1, 0.0F);
		eye12 = new ModelRenderer(this, 75, 30);
		eye12.setRotationPoint(-6.0F, -6.4F, 3.9F);
		eye12.addBox(-1.0F, -1.0F, -1.0F, 2, 2, 2, 0.0F);
		eye14 = new ModelRenderer(this, 75, 30);
		eye14.setRotationPoint(-1.0F, -1.2F, -3.8F);
		eye14.addBox(-1.0F, -1.0F, -1.0F, 2, 2, 2, 0.0F);
		lBodyTentacle02b = new ModelRenderer(this, 5, 118);
		lBodyTentacle02b.setRotationPoint(0.0F, 0.3F, -4.7F);
		lBodyTentacle02b.addBox(-1.0F, -1.0F, -5.0F, 2, 2, 5, 0.0F);
		setRotateAngle(lBodyTentacle02b, 0.19198621771937624F, 0.08726646259971647F, 0.0F);
		eye18 = new ModelRenderer(this, 61, 30);
		eye18.setRotationPoint(-2.6F, 1.7F, -3.4F);
		eye18.addBox(-1.5F, -1.5F, -1.5F, 3, 3, 3, 0.0F);
		mouth03Teeth02 = new ModelRenderer(this, 80, 19);
		mouth03Teeth02.mirror = true;
		mouth03Teeth02.setRotationPoint(0.0F, 0.0F, 0.0F);
		mouth03Teeth02.addBox(-2.7F, -3.9F, 0.3F, 6, 4, 1, 0.0F);
		eye16 = new ModelRenderer(this, 61, 30);
		eye16.setRotationPoint(-1.6F, -1.9F, -5.1F);
		eye16.addBox(-1.5F, -1.5F, -1.5F, 3, 3, 3, 0.0F);
		eye26 = new ModelRenderer(this, 61, 30);
		eye26.setRotationPoint(1.0F, -2.0F, 3.8F);
		eye26.addBox(-1.5F, -1.5F, -1.5F, 3, 3, 3, 0.0F);
		eye22 = new ModelRenderer(this, 75, 30);
		eye22.setRotationPoint(1.6F, -1.7F, -3.4F);
		eye22.addBox(-1.0F, -1.0F, -1.0F, 2, 2, 2, 0.0F);
		tail01e = new ModelRenderer(this, 0, 113);
		tail01e.setRotationPoint(0.0F, 0.4F, 8.9F);
		tail01e.addBox(-1.0F, -1.0F, 0.0F, 2, 2, 10, 0.0F);
		lHindTentacle03a = new ModelRenderer(this, 63, 96);
		lHindTentacle03a.setRotationPoint(4.2F, 10.0F, -3.5F);
		lHindTentacle03a.addBox(-2.0F, -2.0F, 0.0F, 4, 4, 8, 0.0F);
		setRotateAngle(lHindTentacle03a, 0.0F, 1.0471975511965976F, 0.0F);
		lHindTentacle02d = new ModelRenderer(this, 92, 96);
		lHindTentacle02d.setRotationPoint(0.0F, 0.4F, 7.6F);
		lHindTentacle02d.addBox(-1.5F, -1.5F, 0.0F, 3, 3, 9, 0.0F);
		setRotateAngle(lHindTentacle02d, 0.0F, -0.06981317007977318F, 0.0F);
		lHindTentacle02a = new ModelRenderer(this, 0, 96);
		lHindTentacle02a.setRotationPoint(4.2F, 9.5F, -1.9F);
		lHindTentacle02a.addBox(-3.0F, -3.0F, 0.0F, 6, 6, 10, 0.0F);
		setRotateAngle(lHindTentacle02a, 0.0F, 0.5235987755982988F, 0.0F);
		rHindTentacle03 = new ModelRenderer(this, 66, 99);
		rHindTentacle03.mirror = true;
		rHindTentacle03.setRotationPoint(0.0F, 0.0F, 0.0F);
		rHindTentacle03.addBox(-2.0F, -2.0F, -3.5F, 4, 4, 5, 0.0F);
		setRotateAngle(rHindTentacle03, 0.0F, -0.7853981633974483F, 0.0F);
		lBackTentacle02a_1 = new ModelRenderer(this, 94, 98);
		lBackTentacle02a_1.setRotationPoint(5.4F, -0.7F, 5.8F);
		lBackTentacle02a_1.addBox(-1.5F, -1.5F, 0.0F, 3, 3, 7, 0.0F);
		setRotateAngle(lBackTentacle02a_1, -0.7330382858376184F, 0.3665191429188092F, 0.0F);
		rBackTentacle02b = new ModelRenderer(this, 4, 117);
		rBackTentacle02b.mirror = true;
		rBackTentacle02b.setRotationPoint(0.0F, 0.0F, 6.3F);
		rBackTentacle02b.addBox(-1.0F, -1.0F, 0.0F, 2, 2, 6, 0.0F);
		setRotateAngle(rBackTentacle02b, -0.41887902047863906F, 0.08726646259971647F, 0.0F);
		eye07 = new ModelRenderer(this, 75, 30);
		eye07.setRotationPoint(-1.8F, -3.0F, 3.5F);
		eye07.addBox(-1.0F, -1.0F, -1.0F, 2, 2, 2, 0.0F);
		rBackTentacle02c_1 = new ModelRenderer(this, 17, 115);
		rBackTentacle02c_1.mirror = true;
		rBackTentacle02c_1.setRotationPoint(0.0F, 0.0F, 4.7F);
		rBackTentacle02c_1.addBox(-0.5F, -0.5F, 0.0F, 1, 1, 4, 0.0F);
		setRotateAngle(rBackTentacle02c_1, 0.15707963267948966F, -0.13962634015954636F, 0.0F);
		rArm01d = new ModelRenderer(this, 1, 114);
		rArm01d.mirror = true;
		rArm01d.setRotationPoint(0.0F, 0.0F, -7.2F);
		rArm01d.addBox(-1.0F, -1.0F, -9.0F, 2, 2, 9, 0.0F);
		setRotateAngle(rArm01d, 0.13962634015954636F, -0.13962634015954636F, 0.0F);
		mouth02Teeth01 = new ModelRenderer(this, 79, 10);
		mouth02Teeth01.setRotationPoint(0.0F, -5.0F, 0.0F);
		mouth02Teeth01.addBox(-3.5F, -0.7F, -2.9F, 7, 5, 2, 0.0F);
		mouth01Teeth01 = new ModelRenderer(this, 79, 10);
		mouth01Teeth01.setRotationPoint(0.0F, -5.0F, 0.0F);
		mouth01Teeth01.addBox(-3.5F, -0.7F, -2.9F, 7, 5, 2, 0.0F);
		rBodyTentacle01b = new ModelRenderer(this, 93, 97);
		rBodyTentacle01b.mirror = true;
		rBodyTentacle01b.setRotationPoint(0.0F, 0.0F, -7.0F);
		rBodyTentacle01b.addBox(-1.5F, -1.5F, -8.0F, 3, 3, 8, 0.0F);
		setRotateAngle(rBodyTentacle01b, 0.05235987755982988F, -0.3665191429188092F, 0.0F);
		eye10 = new ModelRenderer(this, 61, 30);
		eye10.setRotationPoint(3.4F, -7.7F, 6.0F);
		eye10.addBox(-1.5F, -1.5F, -1.5F, 3, 3, 3, 0.0F);
		rHindTentacle02c = new ModelRenderer(this, 63, 96);
		rHindTentacle02c.mirror = true;
		rHindTentacle02c.setRotationPoint(0.0F, 0.4F, 7.5F);
		rHindTentacle02c.addBox(-2.0F, -2.0F, 0.0F, 4, 4, 8, 0.0F);
		setRotateAngle(rHindTentacle02c, 0.0F, 0.3490658503988659F, 0.0F);
		eye25 = new ModelRenderer(this, 61, 30);
		eye25.setRotationPoint(0.8F, -2.8F, 3.8F);
		eye25.addBox(-1.5F, -1.5F, -1.5F, 3, 3, 3, 0.0F);
		eye13 = new ModelRenderer(this, 75, 30);
		eye13.setRotationPoint(2.6F, -2.0F, -3.8F);
		eye13.addBox(-1.0F, -1.0F, -1.0F, 2, 2, 2, 0.0F);
		eye24 = new ModelRenderer(this, 75, 30);
		eye24.setRotationPoint(1.6F, -0.2F, 3.6F);
		eye24.addBox(-1.0F, -1.0F, -1.0F, 2, 2, 2, 0.0F);
		lBackTentacle02b_1 = new ModelRenderer(this, 4, 117);
		lBackTentacle02b_1.setRotationPoint(0.0F, 0.0F, 6.3F);
		lBackTentacle02b_1.addBox(-1.0F, -1.0F, 0.0F, 2, 2, 6, 0.0F);
		setRotateAngle(lBackTentacle02b_1, -0.41887902047863906F, -0.08726646259971647F, 0.0F);
		mouth03Tooth03 = new ModelRenderer(this, 105, 10);
		mouth03Tooth03.mirror = true;
		mouth03Tooth03.setRotationPoint(-3.3F, -5.5F, -0.4F);
		mouth03Tooth03.addBox(-0.5F, -0.5F, -3.0F, 1, 1, 3, 0.0F);
		setRotateAngle(mouth03Tooth03, -0.3141592653589793F, 0.19198621771937624F, -0.9560913642424937F);
		rHindTentacle02a = new ModelRenderer(this, 0, 96);
		rHindTentacle02a.mirror = true;
		rHindTentacle02a.setRotationPoint(-4.2F, 9.5F, -1.9F);
		rHindTentacle02a.addBox(-3.0F, -3.0F, 0.0F, 6, 6, 10, 0.0F);
		setRotateAngle(rHindTentacle02a, 0.0F, -0.5235987755982988F, 0.0F);
		lBodyTentacle02c = new ModelRenderer(this, 17, 115);
		lBodyTentacle02c.setRotationPoint(0.0F, 0.0F, -4.8F);
		lBodyTentacle02c.addBox(-0.5F, -0.5F, -4.0F, 1, 1, 4, 0.0F);
		setRotateAngle(lBodyTentacle02c, 0.10471975511965977F, 0.0F, 0.0F);
		mouth02Tooth04 = new ModelRenderer(this, 105, 17);
		mouth02Tooth04.mirror = true;
		mouth02Tooth04.setRotationPoint(-1.6F, -5.5F, -0.6F);
		mouth02Tooth04.addBox(-0.5F, -0.5F, -4.7F, 1, 1, 5, 0.0F);
		setRotateAngle(mouth02Tooth04, -0.3141592653589793F, -0.2792526803190927F, -0.7853981633974483F);
		rBodyTentacle02a = new ModelRenderer(this, 96, 100);
		rBodyTentacle02a.mirror = true;
		rBodyTentacle02a.setRotationPoint(-3.5F, -10.4F, -6.8F);
		rBodyTentacle02a.addBox(-1.5F, -1.5F, -5.0F, 3, 3, 5, 0.0F);
		setRotateAngle(rBodyTentacle02a, 0.05235987755982988F, 0.10471975511965977F, 0.0F);
		tail01a = new ModelRenderer(this, 0, 96);
		tail01a.setRotationPoint(0.0F, 3.7F, 11.3F);
		tail01a.addBox(-3.0F, -3.0F, 0.0F, 6, 6, 10, 0.0F);
		setRotateAngle(tail01a, -0.2792526803190927F, 0.0F, 0.0F);
		mouth02Tooth04_1 = new ModelRenderer(this, 105, 10);
		mouth02Tooth04_1.setRotationPoint(-3.4F, -3.4F, -0.4F);
		mouth02Tooth04_1.addBox(-0.5F, -0.5F, -2.9F, 1, 1, 3, 0.0F);
		setRotateAngle(mouth02Tooth04_1, 0.19198621771937624F, -0.19198621771937624F, 0.8726646259971648F);
		rBackTentacle02c = new ModelRenderer(this, 16, 114);
		rBackTentacle02c.mirror = true;
		rBackTentacle02c.setRotationPoint(0.0F, 0.0F, 5.8F);
		rBackTentacle02c.addBox(-0.5F, -0.5F, 0.0F, 1, 1, 5, 0.0F);
		setRotateAngle(rBackTentacle02c, -0.13962634015954636F, -0.13962634015954636F, 0.0F);
		lBodyTentacle03b = new ModelRenderer(this, 17, 114);
		lBodyTentacle03b.setRotationPoint(0.0F, 0.0F, -3.8F);
		lBodyTentacle03b.addBox(-0.5F, -0.5F, -5.0F, 1, 1, 5, 0.0F);
		setRotateAngle(lBodyTentacle03b, 0.19198621771937624F, 0.2617993877991494F, 0.0F);
		eye04 = new ModelRenderer(this, 75, 30);
		eye04.setRotationPoint(4.8F, -16.8F, 2.7F);
		eye04.addBox(-1.0F, -1.0F, -1.0F, 2, 2, 2, 0.0F);
		rBackTentacle02a_1 = new ModelRenderer(this, 95, 99);
		rBackTentacle02a_1.mirror = true;
		rBackTentacle02a_1.setRotationPoint(-3.5F, -14.5F, 5.9F);
		rBackTentacle02a_1.addBox(-1.5F, -1.5F, 0.0F, 3, 3, 6, 0.0F);
		setRotateAngle(rBackTentacle02a_1, -0.5235987755982988F, -0.10471975511965977F, 0.0F);
		mouth03Upper = new ModelRenderer(this, 59, 0);
		mouth03Upper.mirror = true;
		mouth03Upper.setRotationPoint(-3.8F, -12.2F, -1.8F);
		mouth03Upper.addBox(-4.0F, -6.0F, -1.0F, 8, 6, 2, 0.0F);
		setRotateAngle(mouth03Upper, 0.0F, 0.0F, -0.9599310885968813F);
		bodyBase.addChild(lHindTentacle01a);
		bodyUpper.addChild(mouth01Upper);
		rArm01b.addChild(rArm01c);
		lHindTentacle03a.addChild(lHindTentacle03b);
		mouth01Upper.addChild(mouth01Lower);
		lHindTentacle03a.addChild(lHindTentacle03);
		bodyMid.addChild(lBodyTentacle04a);
		mouth02Upper.addChild(mouth02Snout);
		bodyMid.addChild(lBackTentacle01a);
		rArm01b.addChild(eye17);
		lHindTentacle02a.addChild(lHindTentacle02b);
		mouth03Upper.addChild(mouth03Snout);
		mouth03Upper.addChild(mouth03Teeth01);
		rBackTentacle02a_1.addChild(rBackTentacle02b_1);
		bodyMid.addChild(eye21);
		mouth03Upper.addChild(mouth03Tooth05);
		mouth02Upper.addChild(mouth02Lower);
		lBackTentacle02b.addChild(lBackTentacle02c);
		rBodyTentacle04a.addChild(rBodyTentacle04b);
		bodyUpper.addChild(eye09);
		bodyUpper.addChild(eye01);
		bodyMid.addChild(rBodyTentacle03a);
		mouth03Upper.addChild(mouth03Tooth02);
		bodyMid.addChild(lArm01a);
		bodyMid.addChild(rBackTentacle01a);
		lBackTentacle01b.addChild(lBackTentacle01c);
		bodyMid.addChild(rArm01a);
		lArm01a.addChild(lArm01b);
		mouth03Upper.addChild(mouth03Lower);
		mouth01Upper.addChild(eye05);
		lArm01c.addChild(lArm01d);
		lBodyTentacle01a.addChild(lBodyTentacle01b);
		rArm01a.addChild(rArm01b);
		rBodyTentacle02a.addChild(rBodyTentacle02b);
		bodyMid.addChild(eye20);
		bodyMid.addChild(rBackTentacle02a);
		lBackTentacle02b_1.addChild(lBackTentacle02c_1);
		bodyMid.addChild(eye19);
		tail01a.addChild(eye28);
		lHindTentacle02b.addChild(eye23);
		tail01b.addChild(tail01c);
		rHindTentacle02a.addChild(rHindTentacle02b);
		rHindTentacle01d.addChild(rHindTentacle01e);
		tail01c.addChild(tail01d);
		lHindTentacle03b.addChild(lHindTentacle03c);
		mouth01Lower.addChild(mouth01Teeth03);
		mouth02Upper.addChild(mouth02Tooth02);
		rBackTentacle01a.addChild(rBackTentacle01b);
		bodyBase.addChild(lBodyTentacle01a);
		mouth02Lower.addChild(mouth02Teeth02);
		lBackTentacle02a.addChild(lBackTentacle02b);
		bodyUpper.addChild(eye11);
		lHindTentacle01a.addChild(lHindTentacle01b);
		lArm01a.addChild(eye15);
		headJoint.addChild(bodyUpper);
		mouth03Upper.addChild(eye08);
		lHindTentacle02b.addChild(lHindTentacle02c);
		rHindTentacle02c.addChild(eye31);
		lArm01b.addChild(lArm01c);
		bodyMid.addChild(rBodyTentacle04a);
		rBodyTentacle02b.addChild(rBodyTentacle02c);
		rHindTentacle03a.addChild(rHindTentacle03b);
		lHindTentacle02d.addChild(lHindTentacle02e);
		mouth03Lower.addChild(mouth02Teeth03_1);
		rHindTentacle01a.addChild(rHindTentacle01b);
		rBodyTentacle03a.addChild(rBodyTentacle03b);
		mouth03Upper.addChild(mouth03Tooth01);
		bodyBase.addChild(bodyMid);
		bodyBase.addChild(rBodyTentacle01a);
		mouth02Upper.addChild(mouth02Tooth01);
		lHindTentacle01c.addChild(lHindTentacle01d);
		rHindTentacle01c.addChild(eye29);
		mouth03Upper.addChild(mouth03Tooth04);
		mouth01Upper.addChild(mouth01Tooth05);
		mouth01Lower.addChild(mouth01Teeth02);
		bodyMid.addChild(lBodyTentacle02a);
		tail01b.addChild(eye27);
		mouth01Upper.addChild(mouth01Tooth03);
		rHindTentacle01b.addChild(rHindTentacle01c);
		rHindTentacle02d.addChild(rHindTentacle02e);
		rHindTentacle03b.addChild(rHindTentacle03c);
		rHindTentacle01d.addChild(eye30);
		bodyUpper.addChild(eye03);
		rBackTentacle01b.addChild(rBackTentacle01c);
		bodyBase.addChild(rHindTentacle03a);
		bodyBase.addChild(rHindTentacle01a);
		lBodyTentacle04a.addChild(lBodyTentacle04b);
		rHindTentacle01c.addChild(rHindTentacle01d);
		mouth01Upper.addChild(mouth01Snout);
		lBodyTentacle01b.addChild(lBodyTentacle01c);
		rHindTentacle02c.addChild(rHindTentacle02d);
		bodyMid.addChild(lBackTentacle02a);
		bodyUpper.addChild(eye02);
		tail01a.addChild(tail01b);
		bodyUpper.addChild(mouth02Upper);
		rHindTentacle03b.addChild(eye32);
		bodyMid.addChild(lBodyTentacle03a);
		mouth01Upper.addChild(mouth01Tooth02);
		mouth01Upper.addChild(mouth01Tooth04);
		lHindTentacle01d.addChild(lHindTentacle01e);
		mouth02Upper.addChild(eye06);
		mouth02Upper.addChild(mouth02Tooth03);
		rBodyTentacle01b.addChild(rBodyTentacle01c);
		mouth01Upper.addChild(mouth01Tooth01);
		lHindTentacle01b.addChild(lHindTentacle01c);
		mouth01Upper.addChild(eye04_1);
		mouth01Upper.addChild(mouth01Tooth06);
		lBackTentacle01a.addChild(lBackTentacle01b);
		mouth02Lower.addChild(mouth02Teeth03);
		bodyUpper.addChild(eye12);
		lArm01c.addChild(eye14);
		lBodyTentacle02a.addChild(lBodyTentacle02b);
		rArm01a.addChild(eye18);
		mouth03Lower.addChild(mouth03Teeth02);
		rArm01b.addChild(eye16);
		tail01c.addChild(eye26);
		lBodyTentacle01a.addChild(eye22);
		tail01d.addChild(tail01e);
		bodyBase.addChild(lHindTentacle03a);
		lHindTentacle02c.addChild(lHindTentacle02d);
		bodyBase.addChild(lHindTentacle02a);
		rHindTentacle03a.addChild(rHindTentacle03);
		bodyMid.addChild(lBackTentacle02a_1);
		rBackTentacle02a.addChild(rBackTentacle02b);
		mouth03Upper.addChild(eye07);
		rBackTentacle02b_1.addChild(rBackTentacle02c_1);
		rArm01c.addChild(rArm01d);
		mouth02Upper.addChild(mouth02Teeth01);
		mouth01Upper.addChild(mouth01Teeth01);
		rBodyTentacle01a.addChild(rBodyTentacle01b);
		bodyUpper.addChild(eye10);
		rHindTentacle02b.addChild(rHindTentacle02c);
		lHindTentacle01b.addChild(eye25);
		lArm01a.addChild(eye13);
		lHindTentacle02d.addChild(eye24);
		lBackTentacle02a_1.addChild(lBackTentacle02b_1);
		mouth03Upper.addChild(mouth03Tooth03);
		bodyBase.addChild(rHindTentacle02a);
		lBodyTentacle02b.addChild(lBodyTentacle02c);
		mouth02Upper.addChild(mouth02Tooth04);
		bodyMid.addChild(rBodyTentacle02a);
		bodyBase.addChild(tail01a);
		mouth02Upper.addChild(mouth02Tooth04_1);
		rBackTentacle02b.addChild(rBackTentacle02c);
		lBodyTentacle03a.addChild(lBodyTentacle03b);
		bodyUpper.addChild(eye04);
		bodyMid.addChild(rBackTentacle02a_1);
		bodyUpper.addChild(mouth03Upper);
	}

	@Override
	public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {

		if(size == 0) {
			GlStateManager.pushMatrix();
			GlStateManager.scale(0.75F, 0.75F, 0.75F);
			GlStateManager.translate(0.0F, 8.0F * f5, 0.5F);
			headJoint.render(f5);
			bodyBase.render(f5);
			GlStateManager.popMatrix();
		} else if(size == 1) {
			headJoint.render(f5);
			bodyBase.render(f5);
		} else if(size == 2) {
			GlStateManager.pushMatrix();
			GlStateManager.scale(1.5F, 1.5F, 1.5F);
			GlStateManager.translate(0.0F, -8.0F * f5, 0.5F);
			headJoint.render(f5);
			bodyBase.render(f5);
			GlStateManager.popMatrix();
		}
	}

	/**
	 * This is a helper function from Tabula to set the rotation of model parts
	 */
	/*public void setRotateAngle(ModelRenderer modelRenderer, float x, float y, float z) {
		modelRenderer.rotateAngleX = x;
		modelRenderer.rotateAngleY = y;
		modelRenderer.rotateAngleZ = z;
	}

	@Override
	public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity)
	{
		headJoint.rotateAngleY = f3 / (180F / (float)Math.PI);
		headJoint.rotateAngleX = f4 / (180F / (float)Math.PI);

		mouth01Upper.rotateAngleX = -MathHelper.cos(f2 * 0.25F) * 0.2F + 0.25F;
		mouth01Upper.rotateAngleY = 0.0F;
		mouth01Lower.rotateAngleX = 0.2617993877991494F + (MathHelper.cos(f2 * 0.25F) * 0.2F + 0.25F) * 2;
		mouth01Lower.rotateAngleY = 0.0F;

		mouth02Upper.rotateAngleX = -MathHelper.cos(f2 * 0.23F) * 0.2F + 0.25F;
		mouth02Upper.rotateAngleY = 0.0F;
		mouth02Lower.rotateAngleX = 0.2617993877991494F + (MathHelper.cos(f2 * 0.23F) * 0.2F + 0.25F) * 2;
		mouth02Lower.rotateAngleY = 0.0F;

		mouth03Upper.rotateAngleX = -MathHelper.cos(f2 * 0.27F) * 0.2F + 0.25F;
		mouth03Upper.rotateAngleY = 0.0F;
		mouth03Lower.rotateAngleX = 0.2617993877991494F + (MathHelper.cos(f2 * 0.27F) * 0.2F + 0.25F) * 2;
		mouth03Lower.rotateAngleY = 0.0F;

		float animation = MathHelper.sin((f * 0.4F + 2) * 1.5F) * 0.3F * f1 * 0.3F;
		float flap = MathHelper.sin(entity.ticksExisted * 0.2F) * 0.3F;
		float flap2 = MathHelper.cos(entity.ticksExisted * 0.2F) * 0.4F;

		lHindTentacle01a.rotateAngleY = flap *0.05F + 0.1f + animation * 0.4f;// + 0.20943951023931953F
		lHindTentacle01b.rotateAngleY = lHindTentacle01a.rotateAngleY * 1.5F - 0.1f;
		lHindTentacle01c.rotateAngleY = lHindTentacle01b.rotateAngleY * 1.75F - 0.1f;
		lHindTentacle01d.rotateAngleY = lHindTentacle01c.rotateAngleY * 2F;
		lHindTentacle01e.rotateAngleY = lHindTentacle01d.rotateAngleY * 2.25F;

		lHindTentacle02a.rotateAngleY = flap *0.05F + 0.3f + animation * 0.4f;// + 0.20943951023931953F
		lHindTentacle02b.rotateAngleY = lHindTentacle02a.rotateAngleY * 1.5F - 0.35f;
		lHindTentacle02c.rotateAngleY = lHindTentacle02b.rotateAngleY * 1.65F - 0.2f;
		lHindTentacle02d.rotateAngleY = lHindTentacle02c.rotateAngleY * 1.8F - 0.1f;
		lHindTentacle02e.rotateAngleY = lHindTentacle02d.rotateAngleY * 2.05F;

		lHindTentacle03a.rotateAngleY = flap *0.05F + 0.9f + animation * 0.4f;// + 0.20943951023931953F
		lHindTentacle03b.rotateAngleY = lHindTentacle03a.rotateAngleY * 1.5F - 1.7f;
		lHindTentacle03c.rotateAngleY = lHindTentacle03b.rotateAngleY * 1.75F + 0.3f;

		rHindTentacle01a.rotateAngleY = flap *0.05F - 0.1f + animation * 0.4f;// + 0.20943951023931953F
		rHindTentacle01b.rotateAngleY = rHindTentacle01a.rotateAngleY * 1.5F + 0.1f;
		rHindTentacle01c.rotateAngleY = rHindTentacle01b.rotateAngleY * 1.75F + 0.1f;
		rHindTentacle01d.rotateAngleY = rHindTentacle01c.rotateAngleY * 2F;
		rHindTentacle01e.rotateAngleY = rHindTentacle01d.rotateAngleY * 2.25F;

		rHindTentacle02a.rotateAngleY = flap *0.05F - 0.3f + animation * 0.4f;// + 0.20943951023931953F
		rHindTentacle02b.rotateAngleY = rHindTentacle02a.rotateAngleY * 1.5F + 0.35f;
		rHindTentacle02c.rotateAngleY = rHindTentacle02b.rotateAngleY * 1.65F + 0.2f;
		rHindTentacle02d.rotateAngleY = rHindTentacle02c.rotateAngleY * 1.8F + 0.1f;
		rHindTentacle02e.rotateAngleY = rHindTentacle02d.rotateAngleY * 2.05F;

		rHindTentacle03a.rotateAngleY = flap *0.05F - 0.9f + animation * 0.4f;// + 0.20943951023931953F
		rHindTentacle03b.rotateAngleY = rHindTentacle03a.rotateAngleY * 1.5F + 1.7f;
		rHindTentacle03c.rotateAngleY = rHindTentacle03b.rotateAngleY * 1.75F - 0.3f;

		tail01a.rotateAngleY = flap *0.1F + animation * 0.4f;// + 0.20943951023931953F
		tail01b.rotateAngleY = tail01a.rotateAngleY * 1.5F;
		tail01c.rotateAngleY = tail01b.rotateAngleY * 1.75F;
		tail01d.rotateAngleY = tail01c.rotateAngleY * 2F;
		tail01e.rotateAngleY = tail01d.rotateAngleY * 2.25F;

		lBackTentacle01a.rotateAngleY = flap *0.2F + animation * 0.5f;// + 0.5235987755982988F
		lBackTentacle01b.rotateAngleY = lBackTentacle01a.rotateAngleY * 1.5F;
		lBackTentacle01c.rotateAngleY = lBackTentacle01b.rotateAngleY * 1.75F;

		lBackTentacle01a.rotateAngleX = -0.13962634015954636F - flap2 * 0.5F;
		lBackTentacle01b.rotateAngleX = -0.41887902047863906F - flap2 * 0.75F;
		lBackTentacle01c.rotateAngleX = -0.13962634015954636F - flap2 * 1F;

		lBackTentacle02a.rotateAngleY = flap *0.2F + animation * 0.5f;// + 0.5235987755982988F
		lBackTentacle02b.rotateAngleY = lBackTentacle02a.rotateAngleY * 1.5F;
		lBackTentacle02c.rotateAngleY = lBackTentacle02b.rotateAngleY * 1.75F;

		lBackTentacle02a.rotateAngleX = -0.5235987755982988F - flap2 * 0.5F;
		lBackTentacle02b.rotateAngleX = -0.24434609527920614F - flap2 * 0.75F;
		lBackTentacle02c.rotateAngleX = 0.15707963267948966F - flap2 * 1F;

		lBackTentacle02a_1.rotateAngleY = flap *0.2F + animation * 0.5f;// + 0.5235987755982988F
		lBackTentacle02b_1.rotateAngleY = lBackTentacle02a_1.rotateAngleY * 1.5F;
		lBackTentacle02c_1.rotateAngleY = lBackTentacle02b_1.rotateAngleY * 1.75F;

		lBackTentacle02a_1.rotateAngleX = -0.7330382858376184F - flap2 * 0.5F;
		lBackTentacle02b_1.rotateAngleX = -0.41887902047863906F - flap2 * 0.75F;
		lBackTentacle02c_1.rotateAngleX = -0.13962634015954636F - flap2 * 1F;

		rBackTentacle01a.rotateAngleY = -flap *0.2F + animation * 0.5f;// + 0.5235987755982988F
		rBackTentacle01b.rotateAngleY = rBackTentacle01a.rotateAngleY * 1.5F;
		rBackTentacle01c.rotateAngleY = rBackTentacle01b.rotateAngleY * 1.75F;

		rBackTentacle01a.rotateAngleX = -0.13962634015954636F - flap2 * 0.5F;
		rBackTentacle01b.rotateAngleX = -0.41887902047863906F - flap2 * 0.75F;
		rBackTentacle01c.rotateAngleX = -0.13962634015954636F - flap2 * 1F;

		rBackTentacle02a.rotateAngleY = -flap *0.2F + animation * 0.5f;// + 0.5235987755982988F
		rBackTentacle02b.rotateAngleY = rBackTentacle02a.rotateAngleY * 1.5F;
		rBackTentacle02c.rotateAngleY = rBackTentacle02b.rotateAngleY * 1.75F;

		rBackTentacle02a.rotateAngleX = -0.7330382858376184F - flap2 * 0.5F;
		rBackTentacle02b.rotateAngleX = -0.41887902047863906F - flap2 * 0.75F;
		rBackTentacle02c.rotateAngleX = -0.13962634015954636F - flap2 * 1F;

		rBackTentacle02a_1.rotateAngleY = -flap *0.2F + animation * 0.5f;// + 0.5235987755982988F
		rBackTentacle02b_1.rotateAngleY = rBackTentacle02a_1.rotateAngleY * 1.5F;
		rBackTentacle02c_1.rotateAngleY = rBackTentacle02b_1.rotateAngleY * 1.75F;

		rBackTentacle02a_1.rotateAngleX = -0.5235987755982988F - flap2 * 0.5F;
		rBackTentacle02b_1.rotateAngleX = -0.24434609527920614F - flap2 * 0.75F;
		rBackTentacle02c_1.rotateAngleX = 0.15707963267948966F - flap2 * 1F;

		rArm01a.rotateAngleX = -0.24434609527920614F + MathHelper.cos(f * 0.6662F + (float)Math.PI) * 2.0F * f1 * 0.5F;
		lArm01a.rotateAngleX = -0.24434609527920614F + MathHelper.cos(f * 0.6662F) * 2.0F * f1 * 0.5F;

		lArm01a.rotateAngleY = flap *0.1F - 0.3f;// + 0.20943951023931953F
		lArm01b.rotateAngleY = lArm01a.rotateAngleY * 1.5F + 0.36f;
		lArm01c.rotateAngleY = lArm01b.rotateAngleY * 1.75F + 0.2f;
		lArm01d.rotateAngleY = lArm01c.rotateAngleY * 2F + 0.1f;

		rArm01a.rotateAngleY = -flap *0.1F + 0.3f;// + 0.20943951023931953F
		rArm01b.rotateAngleY = rArm01a.rotateAngleY * 1.5F - 0.36f;
		rArm01c.rotateAngleY = rArm01b.rotateAngleY * 1.75F - 0.2f;
		rArm01d.rotateAngleY = rArm01c.rotateAngleY * 2F - 0.1f;

		rArm01a.rotateAngleZ = 0.0F;
		lArm01a.rotateAngleZ = 0.0F;

		rBodyTentacle01a.rotateAngleX = 0.3665191429188092F + MathHelper.cos(f * 0.6662F + (float)Math.PI) * 2.0F * f1 * 0.5F;
		lBodyTentacle01a.rotateAngleX = 0.3665191429188092F + MathHelper.cos(f * 0.6662F) * 2.0F * f1 * 0.5F;

		rBodyTentacle01a.rotateAngleY = -flap *0.1F + 0.78f;// + 0.20943951023931953F
		rBodyTentacle01b.rotateAngleY = rBodyTentacle01a.rotateAngleY * 1.5F - 1.26f;
		rBodyTentacle01c.rotateAngleY = rBodyTentacle01b.rotateAngleY * 1.75F + 0.1f;

		lBodyTentacle01a.rotateAngleY = flap *0.1F - 0.78f;// + 0.20943951023931953F
		lBodyTentacle01b.rotateAngleY = lBodyTentacle01a.rotateAngleY * 1.5F + 1.26f;
		lBodyTentacle01c.rotateAngleY = lBodyTentacle01b.rotateAngleY * 1.75F - 0.1f;

		rBodyTentacle01a.rotateAngleZ = 0.0F;
		lBodyTentacle01a.rotateAngleZ = 0.0F;

		lBodyTentacle02a.rotateAngleY = flap *0.2F + animation;// + 0.20943951023931953F
		lBodyTentacle02b.rotateAngleY = lBodyTentacle02a.rotateAngleY * 1.5F;
		lBodyTentacle02c.rotateAngleY = lBodyTentacle02b.rotateAngleY * 1.75F;

		lBodyTentacle03a.rotateAngleY = -flap *0.3F - 0.4f + 0.05f + animation;// + 0.20943951023931953F
		lBodyTentacle03b.rotateAngleY = lBodyTentacle03a.rotateAngleY * 1.5F + 0.8f;

		lBodyTentacle04a.rotateAngleY = -flap *0.4F - 0.08f + animation;// + 0.20943951023931953F
		lBodyTentacle04b.rotateAngleY = lBodyTentacle04a.rotateAngleY * 1.5F;

		rBodyTentacle02a.rotateAngleY = -flap *0.2F + animation;// + 0.20943951023931953F
		rBodyTentacle02b.rotateAngleY = rBodyTentacle02a.rotateAngleY * 1.5F;
		rBodyTentacle02c.rotateAngleY = rBodyTentacle02b.rotateAngleY * 1.75F;

		rBodyTentacle03a.rotateAngleY = flap *0.3F + 0.4f - 0.07f + animation;// + 0.20943951023931953F
		rBodyTentacle03b.rotateAngleY = rBodyTentacle03a.rotateAngleY * 1.5F - 0.8f;

		rBodyTentacle04a.rotateAngleY = flap *0.4F + 0.03f + animation;// + 0.20943951023931953F
		rBodyTentacle04b.rotateAngleY = rBodyTentacle04a.rotateAngleY * 1.5F;

		float f6;
		float f7;

		if (swingProgress > -9990.0F)
		{
			f6 = swingProgress;
			f6 = 1.0F - swingProgress;
			f6 *= f6;
			f6 *= f6;
			f6 = 1.0F - f6;
			f7 = MathHelper.sin(f6 * (float)Math.PI);
			float f8 = MathHelper.sin(swingProgress * (float)Math.PI) * -(headJoint.rotateAngleX - 0.7F) * 0.75F;
			rArm01a.rotateAngleX = (float)(rArm01a.rotateAngleX + (f7 * 1.2D +  f8));
			rBodyTentacle01a.rotateAngleX = (float)(rBodyTentacle01a.rotateAngleX + (f7 * 1.2D + f8));
			rArm01a.rotateAngleZ = MathHelper.sin(swingProgress * (float)Math.PI) * -0.4F;
			rBodyTentacle01a.rotateAngleZ = MathHelper.sin(swingProgress * (float)Math.PI) * -0.4F;
			lArm01a.rotateAngleX = (float)(lArm01a.rotateAngleX + (f7 * 1.2D + f8));
			lBodyTentacle01a.rotateAngleX = (float)(lBodyTentacle01a.rotateAngleX + (f7 * 1.2D + f8));
			lArm01a.rotateAngleZ = MathHelper.sin(swingProgress * (float)Math.PI) * 0.4F;
			lBodyTentacle01a.rotateAngleZ = MathHelper.sin(swingProgress * (float)Math.PI) * 0.4F;
		}
	}
}*/
